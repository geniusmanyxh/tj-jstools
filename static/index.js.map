{"version":3,"file":"index.js","sources":["../src/common/paramUtils.ts","../src/type_tool/basic/index.ts","../src/index.ts"],"sourcesContent":["\r\nfunction paramsNullError (prefix:string = '',customTxt?:string) {\r\n  let deaInfo = '参数不能为空！'\r\n  if (prefix) {\r\n    deaInfo = prefix + deaInfo\r\n  }\r\n  if (customTxt) {\r\n    deaInfo = customTxt\r\n  }\r\n  console.error(deaInfo)\r\n  throw Error(deaInfo)\r\n}\r\n\r\nexport {paramsNullError}","import {paramsNullError} from '../../common/paramUtils'\r\n\r\nconst isBasicType = function isType(type: string) {\r\n  // const params = String(type).toLocaleLowerCase()\r\n  return function basicType<T>(value: T): boolean {\r\n    if (arguments.length === 0) {\r\n      paramsNullError(`${value}方法的`)\r\n    }\r\n\r\n    return typeof value === type\r\n  }\r\n}\r\n\r\nconst isBoolean = isBasicType('boolean')\r\nconst isNumber = isBasicType('number')\r\nconst isString = isBasicType('string')\r\nconst isUndefined = isBasicType('undefined')\r\nconst isSymbol = isBasicType('symbol')\r\nexport {\r\n  isBoolean,\r\n  isNumber,\r\n  isString,\r\n  isUndefined,\r\n  isSymbol\r\n}","import * as tjType from './type_tool'\r\n\r\n\r\nexport default {tjType}"],"names":["paramsNullError","prefix","customTxt","deaInfo","console","error","Error","isBasicType","type","value","arguments","length","isBoolean","isNumber","isString","tjType"],"mappings":"oOACA,SAASA,EAAiBC,EAAgB,GAAGC,GAC3C,IAAIC,EAAU,UAQd,MAPIF,IACFE,EAAUF,EAASE,GAEjBD,IACFC,EAAUD,GAEZE,QAAQC,MAAMF,GACRG,MAAMH,EACd,CCTA,MAAMI,EAAc,SAAgBC,GAElC,OAAO,SAAsBC,GAK3B,OAJyB,IAArBC,UAAUC,QACZX,EAAgB,GAAGS,eAGPA,IAAUD,CAC1B,CACF,EAEMI,EAAYL,EAAY,WACxBM,EAAWN,EAAY,UACvBO,EAAWP,EAAY,gBCZd,CAACQ"}