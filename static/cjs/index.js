"use strict";function e(e="",t){let n="参数不能为空！";throw e&&(n=e+n),t&&(n=t),console.error(n),Error(n)}Object.defineProperty(exports,"__esModule",{value:!0});const t=function(t){const n=String(t).toLocaleLowerCase();return function(r){return 0===arguments.length&&e(`is${t}方法的`),typeof r===n}},n=t("Boolean"),r=t("Number"),o=t("String"),i=t("Undefined"),l=t("Symbol"),s=t("Bigint");function u(t,n){return function(r){0===arguments.length&&e(`is${t}方法的`);let o="number"==typeof r;return o&&Number[`is${n}`](r)}}function p(t){0===arguments.length&&e("isFloat方法的");let n="number"==typeof t,r=String(t).indexOf(".")+1;return n&&r>0}function c(t){0===arguments.length&&e("isInfinite方法的");let n="number"==typeof t;return n&&!Number.isFinite(t)}const a=u("Int","Integer"),f=u("Finite","Finite"),y=u("NaN","NaN"),g="[object Object]",b="[object Array]",d="[object Date]",h="[object Function]";function x(t,n){return function(r){0===arguments.length&&e(`is${t}方法的`);let o=Object.prototype.toString.call(r);return o===n}}const T=x("Null","[object Null]"),j=x("Array",b),m=x("Object",g),O=x("Date",d),N=x("Function",h);let U=["string","bigint","boolean","symbol","undefined","function"];function v(e){if(0===arguments.length)return console.warn("getType方法没有接收到参数,返回的类型为undefined"),"undefined";let t="string",n=typeof e,r=U.includes(n);return r?t=n:"number"===n?a(e)?t="int":p(e)?t="float":y(e)?t="NaN":c(e)&&(t="infinite"):"object"===n&&(T(e)?t="null":m(e)?t="object":j(e)?t="array":N(e)?t="function":O(e)&&(t="date")),t}var A;const F={splitType:function(e){let t=e.split("?")[1],n={};if(!t)return n;let r=t.split("&");for(let e=0,t=r.length;e<t;e++){let t=r[e].split("=");n[t[0]]=t[1]}return n},URLSearchParamsType:function(e){let t=e.split("?")[1];const n=new URLSearchParams(t);return Object.fromEntries(n.entries())},RegExpType:function(e){let t={};return e.replace(/(\w+|[\u4e00-\u9fa5]+)=(\w+|[\u4e00-\u9fa5]+)/gi,((e,n,r)=>(t[n]=r,""))),t}},I={noneType:e=>e,decodeURIType:decodeURI,decodeURIComponentType:decodeURIComponent},S={url:null===(A=null===globalThis||void 0===globalThis?void 0:globalThis.location)||void 0===A?void 0:A.search,parseUrlType:"splitType",decodeUrlType:"noneType"};exports.converParamsToUrl=function(e,t,n){return""},exports.getArrayAllType=function(t){j(t)||e("","getArrayAllType方法接收的参数应该是一个数组");let n=[];if(arguments.length>0&&t.length>0)for(let e=0;e<t.length;e++){let r=t[e];n.push(v(r))}return n},exports.getArrayTypeDetail=function(t,n){j(t)||e("","getArrayTypeDetail方法接收的参数应该是一个数组");let r=[];if(arguments.length>0){let e=[],o=[];for(let r=0;r<t.length;r++){let i=r,l=t[r],s=v(l);o.push({index:i,value:l,type:s}),n&&(("number"===n&&["int","float"].includes(s)||n===s)&&e.push({index:i,value:l,type:s}))}r=n?[...e]:[...o]}return r},exports.getObjectAllType=function(t){m(t)||e("","getObjectAllType方法接收的参数应该是一个对象");let n=[];if(arguments.length>0)for(const e in t)if(Object.hasOwnProperty.call(t,e)){let r=t[e];n.push(v(r))}return n},exports.getObjectTypeDetail=function(t,n){m(t)||e("","getObjectTypeDetail方法接收的参数应该是一个对象");let r=[];if(arguments.length>0){let e=[],o=[];for(const r in t)if(Object.hasOwnProperty.call(t,r)){let i=t[r],l=v(i);o.push({key:r,value:i,type:l}),n&&("number"===n&&["int","float"].includes(l)||n===l)&&e.push({key:r,value:i,type:l})}else;r=n?[...e]:[...o]}return r},exports.getType=v,exports.getUrlParams=function(e,t){let n={},r=S,o="",i="";return"string"==typeof arguments[0]?o=arguments[0]:"object"==typeof arguments[0]&&(r=Object.assign(Object.assign({},S),arguments[0])),"object"==typeof arguments[1]&&(r=Object.assign(Object.assign({},S),arguments[1])),i=I[r.decodeUrlType](r.url),n=F[r.parseUrlType](i),o?n[o]:n},exports.isArray=j,exports.isBigint=s,exports.isBoolean=n,exports.isDate=O,exports.isFinite=f,exports.isFloat=p,exports.isFunction=N,exports.isInfinite=c,exports.isInt=a,exports.isNaN=y,exports.isNull=T,exports.isNumber=r,exports.isObject=m,exports.isString=o,exports.isSymbol=l,exports.isUndefined=i;
//# sourceMappingURL=index.js.map
