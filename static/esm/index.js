function e(e="",t){let n="参数不能为空！";throw e&&(n=e+n),t&&(n=t),console.error(n),Error(n)}const t=function(t){const n=String(t).toLocaleLowerCase();return function(i){return 0===arguments.length&&e(`is${t}方法的`),typeof i===n}},n=t("Boolean"),i=t("Number"),r=t("String"),l=t("Undefined"),o=t("Symbol"),c=t("Bigint");function u(t,n){return function(i){0===arguments.length&&e(`is${t}方法的`);let r="number"==typeof i;return r&&Number[`is${n}`](i)}}function s(t){0===arguments.length&&e("isFloat方法的");let n="number"==typeof t,i=String(t).indexOf(".")+1;return n&&i>0}function a(t){0===arguments.length&&e("isInfinite方法的");let n="number"==typeof t;return n&&!Number.isFinite(t)}const p=u("Int","Integer"),f=u("Finite","Finite"),y=u("NaN","NaN"),g="[object Object]",b="[object Array]",d="[object Date]",h="[object Function]";function j(t,n){return function(i){0===arguments.length&&e(`is${t}方法的`);let r=Object.prototype.toString.call(i);return r===n}}const T=j("Null","[object Null]"),m=j("Array",b),O=j("Object",g),N=j("Date",d),U=j("Function",h);let A=["string","bigint","boolean","symbol","undefined","function"];function w(e){if(0===arguments.length)return console.warn("getType方法没有接收到参数,返回的类型为undefined"),"undefined";let t="string",n=typeof e,i=A.includes(n);return i?t=n:"number"===n?p(e)?t="int":s(e)?t="float":y(e)?t="NaN":a(e)&&(t="infinite"):"object"===n&&(T(e)?t="null":O(e)?t="object":m(e)?t="array":U(e)?t="function":N(e)&&(t="date")),t}const F={splitType:function(e){let t=e.split("?")[1],n={};if(!t)return n;let i=t.split("&");for(let e=0,t=i.length;e<t;e++){let t=i[e].split("=");n[t[0]]=t[1]}return n},URLSearchParamsType:function(e){let t=e.split("?")[1];const n=new URLSearchParams(t);return Object.fromEntries(n.entries())},RegExpType:function(e){let t={};return e.replace(/(\w+|[\u4e00-\u9fa5]+)=(\w+|[\u4e00-\u9fa5]+)/gi,((e,n,i)=>(t[n]=i,""))),t}},I={nodeType:e=>e,decodeURIType:decodeURI,decodeURIComponentType:decodeURIComponent},S={url:window.location.search,parseUrlType:"splitType",decodeUrlType:"nodeType"};function D(e,t){let n={},i=S,r="",l="";return"string"==typeof arguments[0]?r=arguments[0]:"object"==typeof arguments[0]&&(i=Object.assign(Object.assign({},S),arguments[0])),"object"==typeof arguments[1]&&(i=Object.assign(Object.assign({},S),arguments[1])),l=I[i.decodeUrlType](i.url),n=F[i.parseUrlType](l),console.log(r,"555"),console.log(n,"555"),r?n[r]:n}const R={getType:w,getArrayAllType:function(t){m(t)||e("","getArrayAllType方法接收的参数应该是一个数组");let n=[];if(arguments.length>0&&t.length>0)for(let e=0;e<t.length;e++){let i=t[e];n.push(w(i))}return n},getArrayTypeDetail:function(t,n){m(t)||e("","getArrayTypeDetail方法接收的参数应该是一个数组");let i=[];if(arguments.length>0){let e=[],r=[];for(let i=0;i<t.length;i++){let l=i,o=t[i],c=w(o);r.push({index:l,value:o,type:c}),n&&(("number"===n&&["int","float"].includes(c)||n===c)&&e.push({index:l,value:o,type:c}))}i=n?[...e]:[...r]}return i},getObjectAllType:function(t){O(t)||e("","getObjectAllType方法接收的参数应该是一个对象");let n=[];if(arguments.length>0)for(const e in t)if(Object.hasOwnProperty.call(t,e)){let i=t[e];n.push(w(i))}return n},getObjectTypeDetail:function(t,n){O(t)||e("","getObjectTypeDetail方法接收的参数应该是一个对象");let i=[];if(arguments.length>0){let e=[],r=[];for(const i in t)if(Object.hasOwnProperty.call(t,i)){let l=t[i],o=w(l);r.push({key:i,value:l,type:o}),n&&("number"===n&&["int","float"].includes(o)||n===o)&&e.push({key:i,value:l,type:o})}else;i=n?[...e]:[...r]}return i},isBoolean:n,isNumber:i,isString:r,isSymbol:o,isUndefined:l,isBigint:c,isInt:p,isFloat:s,isNaN:y,isFinite:f,isInfinite:a,isNull:T,isArray:m,isDate:N,isFunction:U,isObject:O};export{D as getUrlParams,R as tjType};
//# sourceMappingURL=index.js.map
