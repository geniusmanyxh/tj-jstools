function e(e="",t){let n="参数不能为空！";throw e&&(n=e+n),t&&(n=t),console.error(n),Error(n)}const t=function(t){const n=String(t).toLocaleLowerCase();return function(r){return 0===arguments.length&&e(`is${t}方法的`),typeof r===n}},n=t("Boolean"),r=t("Number"),l=t("String"),o=t("Undefined"),i=t("Symbol"),u=t("Bigint");function c(t,n){return function(r){0===arguments.length&&e(`is${t}方法的`);let l="number"==typeof r;return l&&Number[`is${n}`](r)}}function s(t){0===arguments.length&&e("isFloat方法的");let n="number"==typeof t,r=String(t).indexOf(".")+1;return n&&r>0}function f(t){0===arguments.length&&e("isInfinite方法的");let n="number"==typeof t;return n&&!Number.isFinite(t)}const a=c("Int","Integer"),p=c("Finite","Finite"),y=c("NaN","NaN"),g="[object Object]",b="[object Array]",d="[object Date]",h="[object Function]";function j(t,n){return function(r){0===arguments.length&&e(`is${t}方法的`);let l=Object.prototype.toString.call(r);return l===n}}const T=j("Null","[object Null]"),m=j("Array",b),O=j("Object",g),N=j("Date",d),U=j("Function",h);let v=["string","bigint","boolean","symbol","undefined","function"];function w(e){if(0===arguments.length)return console.warn("getType方法没有接收到参数,返回的类型为undefined"),"undefined";let t="string",n=typeof e,r=v.includes(n);return r?t=n:"number"===n?a(e)?t="int":s(e)?t="float":y(e)?t="NaN":f(e)&&(t="infinite"):"object"===n&&(T(e)?t="null":O(e)?t="object":m(e)?t="array":U(e)?t="function":N(e)&&(t="date")),t}function I(t){m(t)||e("","getArrayAllType方法接收的参数应该是一个数组");let n=[];if(arguments.length>0&&t.length>0)for(let e=0;e<t.length;e++){let r=t[e];n.push(w(r))}return n}function R(t,n){m(t)||e("","getArrayTypeDetail方法接收的参数应该是一个数组");let r=[];if(arguments.length>0){let e=[],l=[];for(let r=0;r<t.length;r++){let o=r,i=t[r],u=w(i);l.push({index:o,value:i,type:u}),n&&(("number"===n&&["int","float"].includes(u)||n===u)&&e.push({index:o,value:i,type:u}))}r=n?[...e]:[...l]}return r}function S(t){O(t)||e("","getObjectAllType方法接收的参数应该是一个对象");let n=[];if(arguments.length>0)for(const e in t)if(Object.hasOwnProperty.call(t,e)){let r=t[e];n.push(w(r))}return n}function A(t,n){O(t)||e("","getObjectTypeDetail方法接收的参数应该是一个对象");let r=[];if(arguments.length>0){let e=[],l=[];for(const r in t)if(Object.hasOwnProperty.call(t,r)){let o=t[r],i=w(o);l.push({key:r,value:o,type:i}),n&&("number"===n&&["int","float"].includes(i)||n===i)&&e.push({key:r,value:o,type:i})}else;r=n?[...e]:[...l]}return r}var F;const x={splitType:function(e){let t=e.split("?")[1],n={};if(!t)return n;let r=t.split("&");for(let e=0,t=r.length;e<t;e++){let t=r[e].split("=");n[t[0]]=t[1]}return n},URLSearchParamsType:function(e){let t=e.split("?")[1];const n=new URLSearchParams(t);return Object.fromEntries(n.entries())},RegExpType:function(e){let t={};return e.replace(/(\w+|[\u4e00-\u9fa5]+)=(\w+|[\u4e00-\u9fa5]+)/gi,((e,n,r)=>(t[n]=r,""))),t}},D={noneType:e=>e,decodeURIType:decodeURI,decodeURIComponentType:decodeURIComponent},L={url:null===(F=null===globalThis||void 0===globalThis?void 0:globalThis.location)||void 0===F?void 0:F.search,parseUrlType:"splitType",decodeUrlType:"noneType"};function P(e,t){let n={},r=L,l="",o="";return"string"==typeof arguments[0]?l=arguments[0]:"object"==typeof arguments[0]&&(r=Object.assign(Object.assign({},L),arguments[0])),"object"==typeof arguments[1]&&(r=Object.assign(Object.assign({},L),arguments[1])),o=D[r.decodeUrlType](r.url),n=x[r.parseUrlType](o),l?n[l]:n}function $(e,t,n){return""}export{$ as converParamsToUrl,I as getArrayAllType,R as getArrayTypeDetail,S as getObjectAllType,A as getObjectTypeDetail,w as getType,P as getUrlParams,m as isArray,u as isBigint,n as isBoolean,N as isDate,p as isFinite,s as isFloat,U as isFunction,f as isInfinite,a as isInt,y as isNaN,T as isNull,r as isNumber,O as isObject,l as isString,i as isSymbol,o as isUndefined};
//# sourceMappingURL=index.js.map
